@using EmployeeManagement.Logic
@model EmployeeModel
@using PagedList.Mvc
@using EmployeeManagement.Helpers
@using EmployeeManagement.Model

@{
    int i = 0;
    int count = Model.Filters.Count() + 1;
    int id = Model.Table == null ? 0 : Model.Table.Id;
}

<div class="table-responsive">
    <table id="tblSample1" class="table table-striped table-bordered table-hover">
        <thead>
            <tr class="header-title">
                @foreach (var filter in Model.Filters)
                {
                    if (filter.ColumnName.ToLower() != "id")
                    {
                        <th @(filter.ColumnName == "CityID" ? "style=display:none" : "")>
                            @filter.ColumnName
                            @*@Html.Sorter(filter.ColumnName, filter.ColumnName, Model.dynamicListMetaData.TotalItemCount, "Sample1FilterSearch",
                                 "Home", new AjaxOptions() { UpdateTargetId = "Sample1List", OnSuccess = "", OnBegin = "beforePage" },
                                 new { page = Model.dynamicListMetaData.PageNumber, sortOrder = filter.ColumnName == Model.fieldName ? Model.sortOrder : "" })*@
                        </th>
                    }
                    i++;
                }
            </tr>
        </thead>
        @if (Model != null && Model.dynamicList.Count() > 0)
        {
            <tbody>
                @foreach (var item in Model.dynamicList)
                {
                    <tr>
                        @foreach (var column in item)
                        {
                            string columnName = column.Key;
                            string columnValue = column.Value == null ? string.Empty : Convert.ToString(column.Value);
                            if (columnName.ToLower() != "id")
                            {
                                <td @(columnName == "CityID" ? "style=display:none" : "")>
                                    @if (columnName.Contains("IsActive"))
                                    {
                                        columnValue = columnValue == null ? "false" : columnValue;
                                        @Html.CustomCheckbox(columnName, columnValue == null ? "false" : columnValue, new { @disabled = "disabled" })
                                    }
                                    else if (columnName.ToLower().Contains("date"))
                                    {
                                        columnValue = string.IsNullOrEmpty(columnValue) ? "" : Convert.ToDateTime(columnValue).ToString("yyyy-MM-dd hh:mm tt");
                                        @Html.Raw(columnValue)
                                    }
                                    else
                                    {
                                        @Html.Raw(columnValue)
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        }
        else
        {
            <tbody>
                <tr>
                    <td colspan="@count">
                        No data
                    </td>
                </tr>
            </tbody>
        }
        <tfoot>
            @if (Model != null && Model.dynamicList.Count() != 0)
            {
                <tr>
                    <td colspan="@count">                       
                        <div class="fixed-table-pagination" style="display: block;">
                            <div class="pull-left">
                                @Html.PagedListPager(new PagedList.StaticPagedList<dynamic>(Model.dynamicList, Model.dynamicListMetaData), 
                               page => Url.Action("Sample1FilterSearch", new
                           {
                               page,
                               pageSize = Model.dynamicListMetaData.PageSize,
                               TotalItemCount = Model.dynamicListMetaData.TotalItemCount,
                               CurrentPage = Model.dynamicListMetaData.PageNumber,
                               sortOrder = Model.sortOrder,
                               fieldName = Model.fieldName,
                               IsShowControls = true,
                               IsShowFirstLast = true,
                               IsShowPages = true
                           }), PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new MyCustomNextPrevNumberRenderOptions(), new AjaxOptions()
                           { HttpMethod = "POST", UpdateTargetId = "Sample1List", }))

                            </div>
                            <div class="pull-right pagination-detail header-title pd-tp-bt-10">
                                <span class="pagination pagination-info">
                                    Page @(Model.dynamicListMetaData.PageCount < Model.dynamicListMetaData.PageNumber ? 0 : Model.dynamicListMetaData.PageNumber) of @Model.dynamicListMetaData.PageCount
                                        &nbsp;/&nbsp;
                                        @(Model.dynamicListMetaData.TotalItemCount) items in @(Model.dynamicListMetaData.PageCount) pages                                       
                                </span>
                            </div>
                        </div>

                    </td>
                </tr>
                            }
        </tfoot>


    </table>
</div>
