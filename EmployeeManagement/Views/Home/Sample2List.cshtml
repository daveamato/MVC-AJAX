@using EmployeeManagement.Logic
@model EmployeeModel
@using PagedList.Mvc
@using EmployeeManagement.Helpers
@using EmployeeManagement.Model

@{
    int i = 0;
    int count = Model.Filters.Count() + 1;
    int id = Model.Table == null ? 0 : Model.Table.Id;
}

<div class="table-responsive">
    <table id="tblSample2" class="table table-striped table-bordered table-hover">
        <thead>
            @Html.Hidden("hdnParamNames", "Home|Sample2FilterSearch|Sample2List|tblSample2")@*Ex:  ControllerName|ActionName|tableList|tableName*@
            <tr class="header-title">
                @foreach (var filter in Model.Filters)
                {
                    if (filter.ColumnName.ToLower() != "id")
                    {
                        <th @(filter.ColumnName == "CityID" ? "style=display:none" : "")>
                            @Html.Sorter(filter.ColumnName, filter.ColumnName, Model.dynamicListMetaData.TotalItemCount, "Sample2FilterSearch",
                                "Home", new AjaxOptions() { UpdateTargetId = "Sample2List", OnSuccess = "", OnBegin = "beforePage" },
                                new { page = Model.dynamicListMetaData.PageNumber, sortOrder = filter.ColumnName == Model.fieldName ? Model.sortOrder : "" })
                        </th>
                    }
                    i++;
                }
            </tr>
        </thead>
        @if (Model != null && Model.dynamicList.Count() > 0)
        {
            <tbody>
                @foreach (var item in Model.dynamicList)
                {
                    <tr>
                        @foreach (var column in item)
                        {
                            string columnName = column.Key;
                            string columnValue = column.Value == null ? string.Empty : Convert.ToString(column.Value);
                            if (columnName.ToLower() != "id")
                            {
                                <td @(columnName == "CityID" ? "style=display:none" : "")>
                                    @if (columnName.Contains("IsActive"))
                                    {
                                        columnValue = columnValue == null ? "false" : columnValue;
                                        @Html.CustomCheckbox(columnName, columnValue == null ? "false" : columnValue, new { @disabled = "disabled" })
                                    }
                                    else if (columnName.ToLower().Contains("date"))
                                    {
                                        columnValue = string.IsNullOrEmpty(columnValue) ? "" : Convert.ToDateTime(columnValue).ToString("yyyy-MM-dd hh:mm tt");
                                        @Html.Raw(columnValue)
                                    }
                                    else
                                    {
                                        @Html.Raw(columnValue)
                                    }
                                </td>
                            }
                        }
                    </tr>
                }
            </tbody>
        }
        else
        {
            <tbody>
                <tr>
                    <td colspan="@count">
                        No data
                    </td>
                </tr>
            </tbody>
        }
        <tfoot>
            @if (Model != null && Model.dynamicList.Count() != 0)
            {
                <tr>
                    <td colspan="@count">
                        @{
                            MVCPagerModel objMVCPagerModel = new MVCPagerModel();
                            objMVCPagerModel.ActionName = "Sample2FilterSearch";
                            objMVCPagerModel.ControllerName = "Home";
                            objMVCPagerModel.UpdateTargetId = "Sample2List";
                            objMVCPagerModel.TableUpdate = "tblSample2";
                            objMVCPagerModel.DynamicList = Model.dynamicList;
                            objMVCPagerModel.DynamicListMetaData = Model.dynamicListMetaData;
                            objMVCPagerModel.sortOrder = Model.sortOrder;
                            objMVCPagerModel.fieldName = Model.fieldName;
                            objMVCPagerModel.StaticPageSize = Model.StaticPageSize;
                            objMVCPagerModel.OnComplete = "";
                        }
                        @Html.Partial("_MVCPager", objMVCPagerModel)
                    </td>
                </tr>
                            }
        </tfoot>
    </table>
</div>
<script>
    if (typeof SortSetting == 'function') {
        SortSetting('@(Model.sortOrder == null ? "" : Model.sortOrder)', '@(Model.fieldName == null ? "" : Model.fieldName)');
    }
</script>



